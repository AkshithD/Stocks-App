{"ast":null,"code":"var _jsxFileName = \"/Users/akshith/Documents/GitHub/Stocks-app/stocks-app/src/pages/Stocks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StockCard from '../components/Stock_card';\nimport Navbar from '../components/Navbar';\nimport './stocks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StocksPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const stocksPerPage = 100;\n  useEffect(() => {\n    // Fetch stock data from the API\n    fetch('http://127.0.0.1:5000/api/twelve').then(response => response.json()).then(data => {\n      data = data.data;\n      setStocks(data);\n    }).catch(error => console.log(error));\n  }, []);\n\n  // Calculate the total number of pages based on the available stocks\n  const totalPages = Math.ceil(stocks.length / stocksPerPage);\n\n  // Handle pagination\n  const goToPage = page => {\n    setCurrentPage(page);\n  };\n\n  // Calculate the index range for the current page\n  const indexOfLastStock = currentPage * stocksPerPage;\n  const indexOfFirstStock = indexOfLastStock - stocksPerPage;\n  const currentStocks = stocks.slice(indexOfFirstStock, indexOfLastStock);\n  const addToPortfolio = async stock => {\n    try {\n      console.log('Adding stock to portfolio:', stock);\n      // Make the API request to add the stock to the portfolio\n      const email = localStorage.getItem('email');\n      const response = await fetch(`http://127.0.0.1:5000/users/${email}/portfolio`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(stock)\n      });\n    } catch (error) {\n      console.log('Error adding stock to portfolio:', error);\n      // Add your logic here for handling the error in adding the stock to the portfolio\n    }\n  };\n\n  const addToWatchlist = async stock => {\n    try {\n      console.log('Adding stock to portfolio:', stock);\n      // Make the API request to add the stock to the portfolio\n      const email = localStorage.getItem('email');\n      const response = await fetch(`http://127.0.0.1:5000/users/${email}/watchlist`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(stock)\n      });\n    } catch (error) {\n      console.log('Error adding stock to portfolio:', error);\n      // Add your logic here for handling the error in adding the stock to the portfolio\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-cards\",\n      children: currentStocks.map(stock => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(StockCard, {\n          stock: stock\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addToPortfolio(stock),\n          children: \"Add to Portfolio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, stock.symbol, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => index + 1).map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => goToPage(page),\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(StocksPage, \"S4OgbUyPCy/JOHCGZEm0nmiMAKo=\");\n_c = StocksPage;\nexport default StocksPage;\nvar _c;\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"names":["React","useState","useEffect","StockCard","Navbar","jsxDEV","_jsxDEV","StocksPage","_s","stocks","setStocks","currentPage","setCurrentPage","stocksPerPage","fetch","then","response","json","data","catch","error","console","log","totalPages","Math","ceil","length","goToPage","page","indexOfLastStock","indexOfFirstStock","currentStocks","slice","addToPortfolio","stock","email","localStorage","getItem","method","headers","body","JSON","stringify","addToWatchlist","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","symbol","Array","from","_","index","_c","$RefreshReg$"],"sources":["/Users/akshith/Documents/GitHub/Stocks-app/stocks-app/src/pages/Stocks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StockCard from '../components/Stock_card';\nimport Navbar from '../components/Navbar';\nimport './stocks.css';\n\nconst StocksPage = () => {\n  const [stocks, setStocks] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const stocksPerPage = 100;\n\n  useEffect(() => {\n    // Fetch stock data from the API\n    fetch('http://127.0.0.1:5000/api/twelve')\n      .then(response => response.json())\n      .then(data => {\n        data = data.data;\n        setStocks(data);\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  // Calculate the total number of pages based on the available stocks\n  const totalPages = Math.ceil(stocks.length / stocksPerPage);\n\n  // Handle pagination\n  const goToPage = (page) => {\n    setCurrentPage(page);\n  };\n\n  // Calculate the index range for the current page\n  const indexOfLastStock = currentPage * stocksPerPage;\n  const indexOfFirstStock = indexOfLastStock - stocksPerPage;\n  const currentStocks = stocks.slice(indexOfFirstStock, indexOfLastStock);\n\n  const addToPortfolio = async (stock) => {\n    try {\n      console.log('Adding stock to portfolio:', stock);\n      // Make the API request to add the stock to the portfolio\n      const email = localStorage.getItem('email');\n      const response = await fetch(`http://127.0.0.1:5000/users/${email}/portfolio`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(stock)\n      });\n    } catch (error) {\n      console.log('Error adding stock to portfolio:', error);\n      // Add your logic here for handling the error in adding the stock to the portfolio\n    }\n  };\n\n  const addToWatchlist = async (stock) => {\n    try {\n      console.log('Adding stock to portfolio:', stock);\n      // Make the API request to add the stock to the portfolio\n      const email = localStorage.getItem('email');\n      const response = await fetch(`http://127.0.0.1:5000/users/${email}/watchlist`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(stock)\n      });\n    } catch (error) {\n      console.log('Error adding stock to portfolio:', error);\n      // Add your logic here for handling the error in adding the stock to the portfolio\n    }\n  };\n\n  return (\n    <div>\n        <Navbar />\n      <div className=\"search-bar\">\n        {/* Render your search bar component here */}\n      </div>\n      <div className=\"stock-cards\">\n        {currentStocks.map((stock) => (\n          <div key={stock.symbol}>\n          <StockCard stock={stock} />\n          <button onClick={() => addToPortfolio(stock)}>Add to Portfolio</button>\n        </div>\n        ))}\n      </div>\n      <div className=\"pagination\">\n        {Array.from({ length: totalPages }, (_, index) => index + 1).map((page) => (\n          <button key={page} onClick={() => goToPage(page)}>\n            {page}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default StocksPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}