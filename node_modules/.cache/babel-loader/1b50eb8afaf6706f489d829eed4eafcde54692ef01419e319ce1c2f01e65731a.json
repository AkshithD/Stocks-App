{"ast":null,"code":"var _jsxFileName = \"/Users/akshith/Documents/GitHub/Stocks-app/stocks-app/src/pages/Portfolio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StockCard from '../components/Stock_card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  useEffect(() => {\n    const fetchUserStocks = async () => {\n      try {\n        // Fetch user's stocks from the API based on their email\n        const email = localStorage.getItem('userEmail');\n        const response = await fetch(`http://127.0.0.1:5000/users/${email}/portfolio`);\n        const data = await response.json();\n        setStocks(data);\n      } catch (error) {\n        console.log('Error fetching user stocks:', error);\n      }\n    };\n\n    // Fetch user's stocks when the component mounts\n    fetchUserStocks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), stocks.map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n      stock: stock\n    }, stock.symbol, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioPage, \"ckkB5iKANHozGm/BUdCimNAdz7k=\");\n_c = PortfolioPage;\nexport default PortfolioPage;\nvar _c;\n$RefreshReg$(_c, \"PortfolioPage\");","map":{"version":3,"names":["React","useState","useEffect","StockCard","jsxDEV","_jsxDEV","PortfolioPage","_s","stocks","setStocks","fetchUserStocks","email","localStorage","getItem","response","fetch","data","json","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","stock","symbol","_c","$RefreshReg$"],"sources":["/Users/akshith/Documents/GitHub/Stocks-app/stocks-app/src/pages/Portfolio.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StockCard from '../components/Stock_card';\n\nconst PortfolioPage = () => {\n  const [stocks, setStocks] = useState([]);\n\n  useEffect(() => {\n    const fetchUserStocks = async () => {\n      try {\n        // Fetch user's stocks from the API based on their email\n        const email = localStorage.getItem('userEmail');\n        const response = await fetch(`http://127.0.0.1:5000/users/${email}/portfolio`);\n        const data = await response.json();\n        setStocks(data);\n      } catch (error) {\n        console.log('Error fetching user stocks:', error);\n      }\n    };\n\n    // Fetch user's stocks when the component mounts\n    fetchUserStocks();\n  }, []);\n\n  return (\n    <div>\n      <h1>Portfolio</h1>\n      {stocks.map((stock) => (\n        <StockCard\n          key={stock.symbol}\n          stock = {stock}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PortfolioPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BJ,KAAM,YAAW,CAAC;QAC9E,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCR,SAAS,CAACO,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC;MACnD;IACF,CAAC;;IAED;IACAR,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBjB,MAAM,CAACkB,GAAG,CAAEC,KAAK,iBAChBtB,OAAA,CAACF,SAAS;MAERwB,KAAK,EAAIA;IAAM,GADVA,KAAK,CAACC,MAAM;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElB,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BID,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}