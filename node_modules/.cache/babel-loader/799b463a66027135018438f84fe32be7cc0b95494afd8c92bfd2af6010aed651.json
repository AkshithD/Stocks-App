{"ast":null,"code":"var _jsxFileName = \"/Users/akshith/Documents/GitHub/Stocks-app/stocks-app/src/pages/Stocks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StockCard from '../components/Stock_card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StocksPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const stocksPerPage = 30;\n\n  // Mock data for stocks\n  const mockStocks = [{\n    id: 1,\n    symbol: 'AAPL',\n    name: 'Apple Inc.',\n    price: 150.25,\n    change: 2.5,\n    volume: 1000000\n  }, {\n    id: 2,\n    symbol: 'GOOGL',\n    name: 'Alphabet Inc.',\n    price: 2800.5,\n    change: -1.75,\n    volume: 500000\n  }, {\n    id: 3,\n    symbol: 'AMZN',\n    name: 'Amazon.com Inc.',\n    price: 3400.0,\n    change: 0.25,\n    volume: 750000\n  }, {\n    id: 4,\n    symbol: 'MSFT',\n    name: 'Microsoft Corporation',\n    price: 250.75,\n    change: 1.75,\n    volume: 900000\n  }, {\n    id: 5,\n    symbol: 'TSLA',\n    name: 'Tesla Inc.',\n    price: 650.5,\n    change: -3.25,\n    volume: 600000\n  }, {\n    id: 6,\n    symbol: 'FB',\n    name: 'Facebook Inc.',\n    price: 350.0,\n    change: 0.5,\n    volume: 400000\n  }, {\n    id: 7,\n    symbol: 'NVDA',\n    name: 'NVIDIA Corporation',\n    price: 800.25,\n    change: -2.75,\n    volume: 300000\n  }, {\n    id: 8,\n    symbol: 'V',\n    name: 'Visa Inc.',\n    price: 220.0,\n    change: 1.0,\n    volume: 200000\n  }, {\n    id: 9,\n    symbol: 'JPM',\n    name: 'JPMorgan Chase & Co.',\n    price: 160.75,\n    change: -0.5,\n    volume: 150000\n  }, {\n    id: 10,\n    symbol: 'WMT',\n    name: 'Walmart Inc.',\n    price: 130.5,\n    change: 0.25,\n    volume: 100000\n  }, {\n    id: 11,\n    symbol: 'PG',\n    name: 'Procter & Gamble Company',\n    price: 140.25,\n    change: 0.75,\n    volume: 80000\n  }, {\n    id: 12,\n    symbol: 'BAC',\n    name: 'Bank of America Corporation',\n    price: 40.0,\n    change: 0.25,\n    volume: 60000\n  }, {\n    id: 13,\n    symbol: 'NFLX',\n    name: 'Netflix Inc.',\n    price: 500.5,\n    change: -1.5,\n    volume: 40000\n  }, {\n    id: 14,\n    symbol: 'XOM',\n    name: 'Exxon Mobil Corporation',\n    price: 60.0,\n    change: 0.5,\n    volume: 30000\n  }, {\n    id: 15,\n    symbol: 'AMD',\n    name: 'Advanced Micro Devices Inc.',\n    price: 120.75,\n    change: -0.75,\n    volume: 20000\n  }, {\n    id: 16,\n    symbol: 'BA',\n    name: 'The Boeing Company',\n    price: 220.0,\n    change: 1.0,\n    volume: 10000\n  }, {\n    id: 17,\n    symbol: 'KO',\n    name: 'The Coca-Cola Company',\n    price: 55.25,\n    change: 0.25,\n    volume: 5000\n  }, {\n    id: 18,\n    symbol: 'DIS',\n    name: 'The Walt Disney Company',\n    price: 180.5,\n    change: 0.5,\n    volume: 2000\n  }, {\n    id: 19,\n    symbol: 'INTC',\n    name: 'Intel Corporation',\n    price: 60.0,\n    change: -0.5,\n    volume: 1000\n  }, {\n    id: 20,\n    symbol: 'CMCSA',\n    name: 'Comcast Corporation',\n    price: 55.25,\n    change: 0.25,\n    volume: 500\n  }, {\n    id: 21,\n    symbol: 'CSCO',\n    name: 'Cisco Systems Inc.',\n    price: 55.5,\n    change: 0.5,\n    volume: 200\n  }, {\n    id: 22,\n    symbol: 'PFE',\n    name: 'Pfizer Inc.',\n    price: 40.0,\n    change: -0.25,\n    volume: 100\n  }, {\n    id: 23,\n    symbol: 'VZ',\n    name: 'Verizon Communications Inc.',\n    price: 55.25,\n    change: 0.0,\n    volume: 50\n  }, {\n    id: 24,\n    symbol: 'TMUS',\n    name: 'T-Mobile US Inc.',\n    price: 120.5,\n    change: -0.25,\n    volume: 25\n  }, {\n    id: 25,\n    symbol: 'PEP',\n    name: 'PepsiCo Inc.',\n    price: 150.0,\n    change: 0.25,\n    volume: 10\n  }, {\n    id: 26,\n    symbol: 'ORCL',\n    name: 'Oracle Corporation',\n    price: 80.25,\n    change: 0.5,\n    volume: 5\n  }, {\n    id: 27,\n    symbol: 'MCD',\n    name: \"McDonald's Corporation\",\n    price: 240.5,\n    change: 0.0,\n    volume: 2\n  }, {\n    id: 28,\n    symbol: 'NKE',\n    name: 'NIKE Inc.',\n    price: 160.0,\n    change: -0.25,\n    volume: 1\n  }, {\n    id: 29,\n    symbol: 'COST',\n    name: 'Costco Wholesale Corporation',\n    price: 450.25,\n    change: 0.5,\n    volume: 0\n  }, {\n    id: 30,\n    symbol: 'CRM',\n    name: 'Salesforce.com Inc.',\n    price: 250.5,\n    change: 0.0,\n    volume: 0\n  }];\n  useEffect(() => {\n    // Set an interval to fetch stock data at a specific interval\n    const fetchStocks = () => {\n      setStocks(mockStocks);\n    };\n    const intervalId = setInterval(fetchStocks, 1000); // Fetch stock data every 1 seconds\n\n    return () => {\n      clearInterval(intervalId); // Clear the interval when the component unmounts\n    };\n  }, []); // Empty dependency array to only run once on component mount\n\n  // Calculate the total number of pages based on the available stocks\n  const totalPages = Math.ceil(stocks.length / stocksPerPage);\n\n  // Handle pagination\n  const goToPage = page => {\n    setCurrentPage(page);\n  };\n\n  // Calculate the index range for the current page\n  const indexOfLastStock = currentPage * stocksPerPage;\n  const indexOfFirstStock = indexOfLastStock - stocksPerPage;\n  const currentStocks = stocks.slice(indexOfFirstStock, indexOfLastStock);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-cards\",\n      children: currentStocks.map(stock => /*#__PURE__*/_jsxDEV(StockCard, {\n        stock: stock\n      }, stock.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => index + 1).map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => goToPage(page),\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(StocksPage, \"S4OgbUyPCy/JOHCGZEm0nmiMAKo=\");\n_c = StocksPage;\nexport default StocksPage;\nvar _c;\n$RefreshReg$(_c, \"StocksPage\");","map":{"version":3,"names":["React","useState","useEffect","StockCard","jsxDEV","_jsxDEV","StocksPage","_s","stocks","setStocks","currentPage","setCurrentPage","stocksPerPage","mockStocks","id","symbol","name","price","change","volume","fetchStocks","intervalId","setInterval","clearInterval","totalPages","Math","ceil","length","goToPage","page","indexOfLastStock","indexOfFirstStock","currentStocks","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","stock","Array","from","_","index","onClick","_c","$RefreshReg$"],"sources":["/Users/akshith/Documents/GitHub/Stocks-app/stocks-app/src/pages/Stocks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StockCard from '../components/Stock_card';\n\nconst StocksPage = () => {\n  const [stocks, setStocks] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const stocksPerPage = 30;\n\n  // Mock data for stocks\n  const mockStocks = [\n    { id: 1, symbol: 'AAPL', name: 'Apple Inc.', price: 150.25, change: 2.5, volume: 1000000 },\n    { id: 2, symbol: 'GOOGL', name: 'Alphabet Inc.', price: 2800.5, change: -1.75, volume: 500000 },\n    { id: 3, symbol: 'AMZN', name: 'Amazon.com Inc.', price: 3400.0, change: 0.25, volume: 750000 },\n    { id: 4, symbol: 'MSFT', name: 'Microsoft Corporation', price: 250.75, change: 1.75, volume: 900000 },\n    { id: 5, symbol: 'TSLA', name: 'Tesla Inc.', price: 650.5, change: -3.25, volume: 600000 },\n    { id: 6, symbol: 'FB', name: 'Facebook Inc.', price: 350.0, change: 0.5, volume: 400000 },\n    { id: 7, symbol: 'NVDA', name: 'NVIDIA Corporation', price: 800.25, change: -2.75, volume: 300000 },\n    { id: 8, symbol: 'V', name: 'Visa Inc.', price: 220.0, change: 1.0, volume: 200000 },\n    { id: 9, symbol: 'JPM', name: 'JPMorgan Chase & Co.', price: 160.75, change: -0.5, volume: 150000 },\n    { id: 10, symbol: 'WMT', name: 'Walmart Inc.', price: 130.5, change: 0.25, volume: 100000 },\n    { id: 11, symbol: 'PG', name: 'Procter & Gamble Company', price: 140.25, change: 0.75, volume: 80000 },\n    { id: 12, symbol: 'BAC', name: 'Bank of America Corporation', price: 40.0, change: 0.25, volume: 60000 },\n    { id: 13, symbol: 'NFLX', name: 'Netflix Inc.', price: 500.5, change: -1.5, volume: 40000 },\n    { id: 14, symbol: 'XOM', name: 'Exxon Mobil Corporation', price: 60.0, change: 0.5, volume: 30000 },\n    { id: 15, symbol: 'AMD', name: 'Advanced Micro Devices Inc.', price: 120.75, change: -0.75, volume: 20000 },\n    { id: 16, symbol: 'BA', name: 'The Boeing Company', price: 220.0, change: 1.0, volume: 10000 },\n    { id: 17, symbol: 'KO', name: 'The Coca-Cola Company', price: 55.25, change: 0.25, volume: 5000 },\n    { id: 18, symbol: 'DIS', name: 'The Walt Disney Company', price: 180.5, change: 0.5, volume: 2000 },\n    { id: 19, symbol: 'INTC', name: 'Intel Corporation', price: 60.0, change: -0.5, volume: 1000 },\n    { id: 20, symbol: 'CMCSA', name: 'Comcast Corporation', price: 55.25, change: 0.25, volume: 500 },\n    { id: 21, symbol: 'CSCO', name: 'Cisco Systems Inc.', price: 55.5, change: 0.5, volume: 200 },\n    { id: 22, symbol: 'PFE', name: 'Pfizer Inc.', price: 40.0, change: -0.25, volume: 100 },\n    { id: 23, symbol: 'VZ', name: 'Verizon Communications Inc.', price: 55.25, change: 0.0, volume: 50 },\n    { id: 24, symbol: 'TMUS', name: 'T-Mobile US Inc.', price: 120.5, change: -0.25, volume: 25 },\n    { id: 25, symbol: 'PEP', name: 'PepsiCo Inc.', price: 150.0, change: 0.25, volume: 10 },\n    { id: 26, symbol: 'ORCL', name: 'Oracle Corporation', price: 80.25, change: 0.5, volume: 5 },\n    { id: 27, symbol: 'MCD', name: \"McDonald's Corporation\", price: 240.5, change: 0.0, volume: 2 },\n    { id: 28, symbol: 'NKE', name: 'NIKE Inc.', price: 160.0, change: -0.25, volume: 1 },\n    { id: 29, symbol: 'COST', name: 'Costco Wholesale Corporation', price: 450.25, change: 0.5, volume: 0 },\n    { id: 30, symbol: 'CRM', name: 'Salesforce.com Inc.', price: 250.5, change: 0.0, volume: 0 },\n    ];\n\n  useEffect(() => {\n    // Set an interval to fetch stock data at a specific interval\n    const fetchStocks = () => {\n      setStocks(mockStocks);\n    };\n\n    const intervalId = setInterval(fetchStocks, 1000); // Fetch stock data every 1 seconds\n\n    return () => {\n      clearInterval(intervalId); // Clear the interval when the component unmounts\n    };\n  }, []); // Empty dependency array to only run once on component mount\n\n  // Calculate the total number of pages based on the available stocks\n  const totalPages = Math.ceil(stocks.length / stocksPerPage);\n\n  // Handle pagination\n  const goToPage = (page) => {\n    setCurrentPage(page);\n  };\n\n  // Calculate the index range for the current page\n  const indexOfLastStock = currentPage * stocksPerPage;\n  const indexOfFirstStock = indexOfLastStock - stocksPerPage;\n  const currentStocks = stocks.slice(indexOfFirstStock, indexOfLastStock);\n\n  return (\n    <div>\n      {/* Render your navbar component here */}\n      <div className=\"search-bar\">\n        {/* Render your search bar component here */}\n      </div>\n      <div className=\"stock-cards\">\n        {currentStocks.map((stock) => (\n          <StockCard key={stock.id} stock={stock} />\n        ))}\n      </div>\n      <div className=\"pagination\">\n        {Array.from({ length: totalPages }, (_, index) => index + 1).map((page) => (\n          <button key={page} onClick={() => goToPage(page)}>\n            {page}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default StocksPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}