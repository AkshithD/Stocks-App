{"ast":null,"code":"var _jsxFileName = \"/Users/akshith/Documents/GitHub/Stocks-app/stocks-app/src/pages/Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const hasAccount = localStorage.getItem('hasAccount') === 'true';\n  const handleLogout = () => {\n    localStorage.removeItem('hasAccount');\n    localStorage.removeItem('email');\n    navigate('/login');\n  };\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // Fetch user data from the API based on their email\n        const email = localStorage.getItem('email');\n        const response = await fetch(`http://127.0.0.1:5000/users/${email}`);\n        const data = await response.json();\n        setUser(data);\n      } catch (error) {\n        console.log('Error fetching user data:', error);\n      }\n    };\n\n    // Check if the user has an account\n    if (hasAccount) {\n      // Retrieve the user's email from localStorage\n      const email = localStorage.getItem('email');\n      setUser({\n        email\n      });\n\n      // Fetch the user's data from the API\n      if (email) {\n        fetchUserData();\n      } else {\n        console.log('No email found');\n      }\n    }\n  }, [hasAccount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Account Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), !hasAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't have an account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), \" or \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 50\n        }, this), \" to create an account.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), user && user.email && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Password: \", showPassword ? user.password : '********', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPassword(!showPassword),\n          children: \"Show Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountPage, \"d8OcBp+IElWEKgA2UsBtg5+BDTs=\", false, function () {\n  return [useNavigate];\n});\n_c = AccountPage;\nexport default AccountPage;\nvar _c;\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","jsxDEV","_jsxDEV","AccountPage","_s","navigate","user","setUser","showPassword","setShowPassword","hasAccount","localStorage","getItem","handleLogout","removeItem","fetchUserData","email","response","fetch","data","json","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","to","password","onClick","_c","$RefreshReg$"],"sources":["/Users/akshith/Documents/GitHub/Stocks-app/stocks-app/src/pages/Account.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\n\nconst AccountPage = () => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const hasAccount = localStorage.getItem('hasAccount') === 'true';\n\n  const handleLogout = () => {\n    localStorage.removeItem('hasAccount');\n    localStorage.removeItem('email');\n    navigate('/login');\n  };\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        // Fetch user data from the API based on their email\n        const email = localStorage.getItem('email');\n        const response = await fetch(`http://127.0.0.1:5000/users/${email}`);\n        const data = await response.json();\n        setUser(data);\n      } catch (error) {\n        console.log('Error fetching user data:', error);\n      }\n    };\n\n    // Check if the user has an account\n    if (hasAccount) {\n      // Retrieve the user's email from localStorage\n      const email = localStorage.getItem('email');\n      setUser({ email });\n\n      // Fetch the user's data from the API\n      if (email) {\n        fetchUserData();\n      }else{\n        console.log('No email found');\n      }\n    }\n  }, [hasAccount]);\n\n  return (\n    <div>\n      <h1>Account Information</h1>\n      {!hasAccount && (\n        <div>\n          <p>You don't have an account.</p>\n          <p>\n            <Link to=\"/signup\">Sign up</Link> or <Link to=\"/login\">login</Link> to create an account.\n          </p>\n        </div>\n      )}\n      {user && user.email && (\n        <div>\n          <p>Email: {user.email}</p>\n          <p>\n            Password: {showPassword ? user.password : '********'}\n            <button onClick={() => setShowPassword(!showPassword)}>Show Password</button>\n          </p>\n          <button onClick={handleLogout}>Logout</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AccountPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}